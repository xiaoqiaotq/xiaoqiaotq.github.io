[{"content":"致敬每一个扛住了生活的平凡人 ","permalink":"https://xiaoqiaotq.github.io/posts/misc/%E7%BD%91%E6%98%932022%E5%B9%B4%E5%BA%A6%E7%9B%98%E7%82%B9/","summary":"致敬每一个扛住了生活的平凡人 ","title":"网易2022年度盘点"},{"content":"背景 家里路由器信号太差了想换一台，真好看到拼多多有活动（360RMB）就入手了一台，顺便手痒想刷下机，看看有什么好玩的软件和应用。\n配置 红米 AX6000 搭载的是 MTK 2021 年发布的 Filogic 830 平台，具体型号是 mt7986a，四核 ARM A53 的架构， 512M 内存和 128M 闪存\n刷机openwrt https://openwrt.org/toh/xiaomi/redmi_ax6000\n官方固件还没有release 先不刷机了 https://downloads.openwrt.org/snapshots/targets/mediatek/filogic/\n先贴一个官方刷机教材，等release再回头看看 https://github.com/openwrt/openwrt/pull/11115\nGain ssh access (see the link: https://openwrt.org/toh/xiaomi/redmi_ax6000#installation) Check current stock system COMMAND: cat /proc/cmdline sample OUTPUT: console=ttyS0,115200n1 loglevel=8 firmware=1 uart_en=1 if firmware=1, current system is ubi1 if firmware=0, current system is ubi0 Setup nvram If the current system is ubi1, please set it up so that the next time it will boot from ubi: nvram set boot_wait=on nvram set uart_en=1 nvram set flag_boot_rootfs=0 nvram set flag_last_success=0 nvram set flag_boot_success=1 nvram set flag_try_sys1_failed=0 nvram set flag_try_sys2_failed=0 nvram commit If the current system is ubi, please set it up so that the next time it will boot from ubi1:\nnvram set boot_wait=on nvram set uart_en=1 nvram set flag_boot_rootfs=1 nvram set flag_last_success=1 nvram set flag_boot_success=1 nvram set flag_try_sys1_failed=0 nvram set flag_try_sys2_failed=0 nvram commit Flash initramfs-factory.ubi If the firmware=1, the current system is using ubi1. In this case, flash the image to ubi: ubiformat /dev/mtd8 -y -f /tmp/initramfs-factory.ubi If the firmware=0, the current system is using ubi. In this case, flash the image to ubi1: ubiformat /dev/mtd9 -y -f /tmp/initramfs-factory.ubi After rebooting, the system should now boot into the openwrt initramfs system. Flash the squashfs-sysupgrade.bin via ssh sysupgrade -n /tmp/squashfs-sysupgrade.bin or you could do sysupgrade via luci Done.\ngithub issue追踪进度 https://github.com/openwrt/openwrt/issues?q=11115\n关于AX6000的刷机讨论 https://forum.openwrt.org/t/add-openwrt-support-for-xiaomi-redmi-ax6000/125008/378\n小米官方固件地址和版本 https://www.miwifi.com/miwifi_download.html 1.0.48 下载地址 https://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/rb06/miwifi_rb06_firmware_847e9_1.0.48.bin\n","permalink":"https://xiaoqiaotq.github.io/posts/linux/%E7%BA%A2%E7%B1%B3ax6000%E5%88%B7%E6%9C%BA/","summary":"背景 家里路由器信号太差了想换一台，真好看到拼多多有活动（360RMB）就入手了一台，顺便手痒想刷下机，看看有什么好玩的软件和应用。\n配置 红米 AX6000 搭载的是 MTK 2021 年发布的 Filogic 830 平台，具体型号是 mt7986a，四核 ARM A53 的架构， 512M 内存和 128M 闪存\n刷机openwrt https://openwrt.org/toh/xiaomi/redmi_ax6000\n官方固件还没有release 先不刷机了 https://downloads.openwrt.org/snapshots/targets/mediatek/filogic/\n先贴一个官方刷机教材，等release再回头看看 https://github.com/openwrt/openwrt/pull/11115\nGain ssh access (see the link: https://openwrt.org/toh/xiaomi/redmi_ax6000#installation) Check current stock system COMMAND: cat /proc/cmdline sample OUTPUT: console=ttyS0,115200n1 loglevel=8 firmware=1 uart_en=1 if firmware=1, current system is ubi1 if firmware=0, current system is ubi0 Setup nvram If the current system is ubi1, please set it up so that the next time it will boot from ubi: nvram set boot_wait=on nvram set uart_en=1 nvram set flag_boot_rootfs=0 nvram set flag_last_success=0 nvram set flag_boot_success=1 nvram set flag_try_sys1_failed=0 nvram set flag_try_sys2_failed=0 nvram commit If the current system is ubi, please set it up so that the next time it will boot from ubi1:","title":"红米Ax6000刷机"},{"content":"https://wsgzao.github.io/post/lrzsz/\nhttps://gist.github.com/meowoodie/4bcf6d6ae81727b618bf\nlrzsz 客户端 服务端都得安装\n# 安装本地 默认装在/opt/homebrew/bin 目录 brew install lrzsz # 在 / usr/loal/bin 目录下创建两个文件 cd /usr/local/bin wget https://raw.githubusercontent.com/RobberPhex/iterm2-zmodem/master/iterm2-recv-zmodem.sh wget https://raw.githubusercontent.com/RobberPhex/iterm2-zmodem/master/iterm2-send-zmodem.sh # 赋予这两个文件可执行权限 chmod 777 /usr/local/bin/iterm2-* # 配置item 见下图 Perference-\u0026gt; Profiles -\u0026gt; Default -\u0026gt; Advanced -\u0026gt; Triggers 的 Edit 按钮， Regular expression: rz waiting to receive.\\*\\*B0100 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-send-zmodem.sh Instant: checked Regular expression: \\*\\*B00000000000000 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-recv-zmodem.sh Instant: checked 改脚本sh /usr/local/bin to /opt/homebrew/bin/ ","permalink":"https://xiaoqiaotq.github.io/posts/linux/iterm_lrzsz/","summary":"https://wsgzao.github.io/post/lrzsz/\nhttps://gist.github.com/meowoodie/4bcf6d6ae81727b618bf\nlrzsz 客户端 服务端都得安装\n# 安装本地 默认装在/opt/homebrew/bin 目录 brew install lrzsz # 在 / usr/loal/bin 目录下创建两个文件 cd /usr/local/bin wget https://raw.githubusercontent.com/RobberPhex/iterm2-zmodem/master/iterm2-recv-zmodem.sh wget https://raw.githubusercontent.com/RobberPhex/iterm2-zmodem/master/iterm2-send-zmodem.sh # 赋予这两个文件可执行权限 chmod 777 /usr/local/bin/iterm2-* # 配置item 见下图 Perference-\u0026gt; Profiles -\u0026gt; Default -\u0026gt; Advanced -\u0026gt; Triggers 的 Edit 按钮， Regular expression: rz waiting to receive.\\*\\*B0100 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-send-zmodem.sh Instant: checked Regular expression: \\*\\*B00000000000000 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-recv-zmodem.sh Instant: checked 改脚本sh /usr/local/bin to /opt/homebrew/bin/ ","title":"Iterm lrzsz"},{"content":"微信支付 https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_4\nhttps://github.com/Wechat-Group/WxJava\nhttps://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=2_2\n微信平台介绍：\n公众号平台 商户平台 开放平台 支付产品名字变更：\n公众号支付-变更为-JSAPI支付。 微信浏览器 扫码支付-变更为-Native支付 系统按微信支付协议生成支付二维码，非移动支付 刷卡支付-变更为-付款码支付 线下收银 APP支付。移动端sdk H5支付 移动浏览器，区分不同微信浏览器 小程序支付 小程序环境中支付 其他待应用 企业付款接口 ？ 付款到零钱-商户 付款到银行卡-商户 电子发票 合单支付 报关 https://api.mch.weixin.qq.com/v3/refund/domestic/refunds\n疑问 商户证书 vs 平台证书 （可以理解客户端和服务端） 证书过期问题（商户和平台），支付宝有提醒，微信无，过期需要开发手动替换 支付宝支付 https://opendocs.alipay.com/open/204/01dcc0?ref=api\n开放平台\nAlipayConfig\nCN=Ant Financial Certification Authority Class 1 R1, OU=Certification Authority, O=Ant Financial, C=CN CN=2088421377101215-2021002127627083, OU=Alipay, O=鸿海（苏州）食品科技股份有限公司, C=CN\nCN=支付宝(中国)网络技术有限公司-2088421377101215, OU=Alipay, O=鸿海（苏州）食品科技股份有限公司, C=CN CN=Ant Financial Certification Authority Class 2 R1, OU=Certification Authority, O=Ant Financial, C=CN CN=Ant Financial Certification Authority R1, OU=Certification Authority, O=Ant Financial, C=CN\nsignatuere alg:SHA384withECDSA publickey : EC CN=Ant Financial Certification Authority E1, OU=Certification Authority, O=Ant Financial, C=CN\nsignatuere alg:SHA256withRSA publicKey: RSA (4,096 bits) CN=Ant Financial Certification Authority R1, OU=Certification Authority, O=Ant Financial, C=CN\nsignatuere alg:SHA1withRSA publicKey: RSA(2048) CN=iTrusChina Class 2 Root CA - G3, OU=China Trust Network, O=iTrusChina, C=CN\n签名主要包含两个过程：摘要和非对称加密，首先对需要签名的数据做摘要（类似于常见的MD5）后得到摘要结果，然后通过签名者的私钥对摘要结果进行非对称加密即可得到签名结果。\nRSA2(SHA256WithRSA):（强烈推荐使用），强制要求RSA密钥的长度至少为2048. RSA(SHA1WithRSA):对RSA密钥的长度不限制，推荐使用2048位以上\nbiz_content -\u0026gt; {\u0026#34;out_request_no\u0026#34;:\u0026#34;HZ01RF003\u0026#34;,\u0026#34;out_trade_no\u0026#34;:\u0026#34;DH-O-2022-12-08-978069\u0026#34;,\u0026#34;refund_amount\u0026#34;:\u0026#34;0.01\u0026#34;,\u0026#34;refund_reason\u0026#34;:\u0026#34;不想要了\u0026#34;} { \u0026#34;alipay_trade_refund_response\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;10000\u0026#34;, \u0026#34;msg\u0026#34;: \u0026#34;Success\u0026#34;, \u0026#34;buyer_logon_id\u0026#34;: \u0026#34;xia***@gmail.com\u0026#34;, \u0026#34;buyer_user_id\u0026#34;: \u0026#34;2088202345875734\u0026#34;, \u0026#34;fund_change\u0026#34;: \u0026#34;Y\u0026#34;, \u0026#34;gmt_refund_pay\u0026#34;: \u0026#34;2022-12-10 14:21:19\u0026#34;, \u0026#34;out_trade_no\u0026#34;: \u0026#34;DH-O-2022-12-08-978069\u0026#34;, \u0026#34;refund_fee\u0026#34;: \u0026#34;0.02\u0026#34;, \u0026#34;send_back_fee\u0026#34;: \u0026#34;0.00\u0026#34;, \u0026#34;trade_no\u0026#34;: \u0026#34;2022121022001475731434706311\u0026#34; }, \u0026#34;alipay_cert_sn\u0026#34;: \u0026#34;421f39ba4d8149cde08b15a426a12734\u0026#34;, \u0026#34;sign\u0026#34;: \u0026#34;C1tH+ax0yAMdWHNcBiHi7BLjHeNttrBA4X3hsgoftsQrrTvQogL2t/ZBS+wB8iuwfPddqyDkPdIMeKN7yjVSYNCdij8ufx1Kpk1i1RgIlzNUdH9zAO0lyCH5q6eHaRDwQBuY/BlCLc7Q5iZuW0fTkcz+UvQ+hMA++UMGh+gk2rq+89ZglZDuY8CC7zxxFuVD7pRdSE+tmoGwXi2HYmmZg0d0OYPhgI+MfnA+9vG+juLrYmHBWjyQrpQmXJecFzwWcKP3M0S9dLMSinHbfVyw7/2RG+vu3rBcDUYXjaghoTx8pVo7+wul+hr3+m7soG/RBaoV6nufCefu5pWyUbz4ZA==\u0026#34; } {\u0026#34;alipay_trade_refund_response\u0026#34;:{\u0026#34;code\u0026#34;:\u0026#34;10000\u0026#34;,\u0026#34;msg\u0026#34;:\u0026#34;Success\u0026#34;,\u0026#34;buyer_logon_id\u0026#34;:\u0026#34;xia***@gmail.com\u0026#34;,\u0026#34;buyer_user_id\u0026#34;:\u0026#34;2088202345875734\u0026#34;,\u0026#34;fund_change\u0026#34;:\u0026#34;Y\u0026#34;,\u0026#34;gmt_refund_pay\u0026#34;:\u0026#34;2022-12-12 12:45:08\u0026#34;,\u0026#34;out_trade_no\u0026#34;:\u0026#34;DH-O-2022-12-08-978069\u0026#34;,\u0026#34;refund_fee\u0026#34;:\u0026#34;0.04\u0026#34;,\u0026#34;send_back_fee\u0026#34;:\u0026#34;0.00\u0026#34;,\u0026#34;trade_no\u0026#34;:\u0026#34;2022121022001475731434706311\u0026#34;},\u0026#34;alipay_cert_sn\u0026#34;:\u0026#34;421f39ba4d8149cde08b15a426a12734\u0026#34;,\u0026#34;sign\u0026#34;:\u0026#34;aaEbzHRSRbPfWdbuJ7rLTNCVNXqILvp28F/8p7d85D9xEcDa45MwbxSJsb0gx7zARBvQZT9+SPPPLoCEyLO3hWmmxGe6vO7C2G0AcEDxOhjgOGOyd40SmmagV2UkcpdmW18Wxu8yUM3bwGcuL8HxX8MMruunmNmk77NIyW4oDE/9miNMsoeUucUGA79FvrfnY7Xs4XPloGLIHhmrasJfsMh5+TMk3hjncLs9SVBtKGtg1LlVwyUT88cA4uF8eWmSHVxQ3kPCdRqB4lV18u2xlSVw0eT1zZ9+1blm0BXoi16B21S4Jn+xqBIFqRAVt3OabIzfFF4J7NMgRnoWiDfXXQ==\u0026#34;} { \u0026#34;alipay_trade_refund_response\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;40004\u0026#34;, \u0026#34;msg\u0026#34;: \u0026#34;Business Failed\u0026#34;, \u0026#34;sub_code\u0026#34;: \u0026#34;ACQ.DISCORDANT_REPEAT_REQUEST\u0026#34;, \u0026#34;sub_msg\u0026#34;: \u0026#34;退款金额不一致\u0026#34;, \u0026#34;refund_fee\u0026#34;: \u0026#34;0.00\u0026#34;, \u0026#34;send_back_fee\u0026#34;: \u0026#34;0.00\u0026#34; }, \u0026#34;alipay_cert_sn\u0026#34;: \u0026#34;421f39ba4d8149cde08b15a426a12734\u0026#34;, \u0026#34;sign\u0026#34;: \u0026#34;AbN/lkHQIYOqdfKkUo45fxsxCkiiq2+NLiOBaVrsoGp83ptbHFTZmHqRnFI7EzsKdkVQD1i5jP+5vUPLMpHqM6vTM8zMBco17BQhS2pqUZe8wVKBTKj2lalpbWurJNYIFgwt33Gl39c81YywtpXwzt/2oLoBnaj8CHlEioVVSof/USD8ikN/VwjllfinuiDjYKs7JB3MPk3275RPTSoP7tB8Vmz4Z0YD2b00txwxYa2S2w8pVS6/dAW5runCGws8o+GMgQqMw9Gpjuewt9DmhdbY+nUBo0wu4ojpUHA6ld9bDuhgH861WGvQz1pf1QXtYzV3kjDqyFsZU0OHVrKTfg==\u0026#34; } 测试 @Test public void aliRefund() throws Exception{ AlipayClient alipayClient = AlipayConfig.getAlipayClient(); AlipayTradeRefundRequest request = new AlipayTradeRefundRequest(); AlipayTradeRefundModel model = new AlipayTradeRefundModel(); String orderNo = \u0026#34;SO-20221208-978060\u0026#34;; model.setOutTradeNo(orderNo); model.setRefundAmount(\u0026#34;0.03\u0026#34;); model.setOutRequestNo(\u0026#34;HZ01RF004\u0026#34;); model.setRefundReason(\u0026#34;不想要了\u0026#34;); request.setBizModel(model); RdPayLog payLog = new RdPayLog(); payLog.setOrderId(orderNo); payLog.setPaytype(\u0026#34;支付宝退款\u0026#34;); payLog.setRequestParam(JSON.toJSONString(model)); try { AlipayTradeRefundResponse response = alipayClient.certificateExecute(request); payLog.setResponseParam(response.getBody()); if (!response.isSuccess()) { throw new BizException(response.getSubMsg()); } } catch (AlipayApiException e) { payLog.setResponseParam(e.getErrCode()+\u0026#34;===\u0026#34;+e.getErrMsg()); }finally { payLogMapper.insert(payLog); } } @Test public void wxRefund() { String orderNo = \u0026#34;SO-20221208-978060\u0026#34;; WxPayRefundRequest wxPayRefundRequest = new WxPayRefundRequest(); wxPayRefundRequest.setOutTradeNo(orderNo); wxPayRefundRequest.setOutRefundNo(\u0026#34;22222\u0026#34;); wxPayRefundRequest.setRefundFee(2); wxPayRefundRequest.setRefundDesc(\u0026#34;不好看 退货\u0026#34;); wxPayRefundRequest.setTotalFee(2100); RdPayLog payLog = new RdPayLog(); payLog.setOrderId(orderNo); payLog.setPaytype(\u0026#34;微信退款\u0026#34;); payLog.setRequestParam(wxPayRefundRequest.toXML()); try { WxPayRefundResult result = wxService.refund(wxPayRefundRequest); payLog.setResponseParam(result.getXmlString()); } catch (WxPayException e) { payLog.setResponseParam(e.getXmlString()); throw new BizException(e.getMessage()); }finally { payLogMapper.insert(payLog); } } ","permalink":"https://xiaoqiaotq.github.io/posts/misc/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98_vs_%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98/","summary":"微信支付 https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_4\nhttps://github.com/Wechat-Group/WxJava\nhttps://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=2_2\n微信平台介绍：\n公众号平台 商户平台 开放平台 支付产品名字变更：\n公众号支付-变更为-JSAPI支付。 微信浏览器 扫码支付-变更为-Native支付 系统按微信支付协议生成支付二维码，非移动支付 刷卡支付-变更为-付款码支付 线下收银 APP支付。移动端sdk H5支付 移动浏览器，区分不同微信浏览器 小程序支付 小程序环境中支付 其他待应用 企业付款接口 ？ 付款到零钱-商户 付款到银行卡-商户 电子发票 合单支付 报关 https://api.mch.weixin.qq.com/v3/refund/domestic/refunds\n疑问 商户证书 vs 平台证书 （可以理解客户端和服务端） 证书过期问题（商户和平台），支付宝有提醒，微信无，过期需要开发手动替换 支付宝支付 https://opendocs.alipay.com/open/204/01dcc0?ref=api\n开放平台\nAlipayConfig\nCN=Ant Financial Certification Authority Class 1 R1, OU=Certification Authority, O=Ant Financial, C=CN CN=2088421377101215-2021002127627083, OU=Alipay, O=鸿海（苏州）食品科技股份有限公司, C=CN\nCN=支付宝(中国)网络技术有限公司-2088421377101215, OU=Alipay, O=鸿海（苏州）食品科技股份有限公司, C=CN CN=Ant Financial Certification Authority Class 2 R1, OU=Certification Authority, O=Ant Financial, C=CN CN=Ant Financial Certification Authority R1, OU=Certification Authority, O=Ant Financial, C=CN","title":"微信支付 👀️ 支付宝支付"},{"content":"事故现场 ### Error querying database. Cause: java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended ### The error may exist in class path resource [mappers/scm/NCMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: select name,code from bd_customer where name like \u0026#39;%%\u0026#39; LIMIT ? ### Cause: java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended ; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:91) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82) at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy92.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy187.findNCCustomerByKeyword(Unknown Source) at sun.reflect.GeneratedMethodAccessor1096.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationInterceptor.invoke(DynamicDataSourceAnnotationInterceptor.java:50) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) at com.sun.proxy.$Proxy188.findNCCustomerByKeyword(Unknown Source) at com.redsea.scm.controller.qc.QCController.ncCustomer(QCController.java:94) 自审 异常堆栈显示生成的sql不对，先说下背景，主数据源是mysql，副数据源是oracle，这个堆栈显示去查oracle数据库，但是用的分页是limit（mysql特有），说明生成分页语句有问题，带着这个疑问，想弄清楚分页mybaits插件是怎么实现的，为什么会选错数据源\n调用代码 # controller @GetMapping(value = \u0026#34;/aa\u0026#34;) public BaseResponse aa( String keyword, HttpServletRequest request){ PageHelper.startPage(1, 20); List customers = ncMapper.aa(keyword); return BaseResponse.success(customers); } # Mapper.java @DS(\u0026#34;NCdata\u0026#34;) public interface NCMapper { List\u0026lt;NCCustomer\u0026gt; aa(@Param(\u0026#34;k\u0026#34;) String keyword); } # mapper.xml \u0026lt;select id=\u0026#34;aa\u0026#34; \u0026gt; select name,code from bd_customer where name like \u0026#39;%${k}%\u0026#39; \u0026lt;/select\u0026gt; 代码很简单 Bug很奇葩 怀疑出问题的点 @Ds DynamicDataSourceAnnotationInterceptor有问题 PageHelper.startPage(1, 20); 调试源码 PageHelper.startPage(1, 20); public static \u0026lt;E\u0026gt; Page\u0026lt;E\u0026gt; startPage(int pageNum, int pageSize, boolean count, Boolean reasonable, Boolean pageSizeZero) { Page\u0026lt;E\u0026gt; page = new Page\u0026lt;E\u0026gt;(pageNum, pageSize, count); page.setReasonable(reasonable); page.setPageSizeZero(pageSizeZero); //当已经执行过orderBy的时候 Page\u0026lt;E\u0026gt; oldPage = getLocalPage(); if (oldPage != null \u0026amp;\u0026amp; oldPage.isOrderByOnly()) { page.setOrderBy(oldPage.getOrderBy()); } setLocalPage(page); return page; } protected static final ThreadLocal\u0026lt;Page\u0026gt; LOCAL_PAGE = new ThreadLocal\u0026lt;Page\u0026gt;(); protected static void setLocalPage(Page page) { LOCAL_PAGE.set(page); } PageInterceptor 调用 初始化dialet 插件配置 单一数据源配置 多数据源正确配置 结论 @ds 是aop实现 没有问题 PageHelper 可以管理多个数据源而实现分页，默认只支持缓存单个数据源 # 增加配置 pagehelper.auto-runtime-dialect=true 参考 https://pagehelper.github.io/docs/howtouse/ 感悟 发现问题排查源码是解决问题根本指导 官方配置多看几眼，有明确事例 ","permalink":"https://xiaoqiaotq.github.io/posts/java/%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2%E5%A4%B1%E6%95%88/","summary":"事故现场 ### Error querying database. Cause: java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended ### The error may exist in class path resource [mappers/scm/NCMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: select name,code from bd_customer where name like \u0026#39;%%\u0026#39; LIMIT ? ### Cause: java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended ; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended at org.","title":"记一次多数据源切换失效问题"},{"content":"reference https://www.madboa.com/geek/openssl\n常用命令 X509证书 # 等于cat alipay/alipayCertPublicKey_RSA2.crt openssl x509 -in alipay/alipayCertPublicKey_RSA2.crt # 格式化输出 openssl x509 -in alipay/alipayCertPublicKey_RSA2.crt -noout -text # 导出 public key openssl x509 -in ~/cert/wxpay/apiclient_cert.pem -pubkey -noout \u0026gt; public.pem 摘要 openssl md5 ~/Downloads/CertTrustChain.p7b openssl sha256 ~/Downloads/CertTrustChain.p7b p12 p12是个keystore，可以存放证书，私钥\n# 提取私钥 可能需要输入密码 openssl pkcs12 -in wxpay/apiclient_cert.p12 -out aa-key.pem -nocerts # 提取证书（证书带公钥） openssl pkcs12 -in wxpay/apiclient_cert.p12 -out aa.crt -clcerts -nokeys # 证书提取公钥 openssl x509 -in aa.crt -pubkey -noout \u0026gt; public.pem p7 证书信任链\n# 二进制der转化为 text openssl pkcs7 -in Downloads/CertTrustChain.p7b -inform der -print_certs -out chain.cer # 验证商户证书 最后的是叶子证书 openssl verify -CAfile chain.cer cert/wxpay/apiclient_cert.pem ","permalink":"https://xiaoqiaotq.github.io/posts/linux/openssl/","summary":"reference https://www.madboa.com/geek/openssl\n常用命令 X509证书 # 等于cat alipay/alipayCertPublicKey_RSA2.crt openssl x509 -in alipay/alipayCertPublicKey_RSA2.crt # 格式化输出 openssl x509 -in alipay/alipayCertPublicKey_RSA2.crt -noout -text # 导出 public key openssl x509 -in ~/cert/wxpay/apiclient_cert.pem -pubkey -noout \u0026gt; public.pem 摘要 openssl md5 ~/Downloads/CertTrustChain.p7b openssl sha256 ~/Downloads/CertTrustChain.p7b p12 p12是个keystore，可以存放证书，私钥\n# 提取私钥 可能需要输入密码 openssl pkcs12 -in wxpay/apiclient_cert.p12 -out aa-key.pem -nocerts # 提取证书（证书带公钥） openssl pkcs12 -in wxpay/apiclient_cert.p12 -out aa.crt -clcerts -nokeys # 证书提取公钥 openssl x509 -in aa.crt -pubkey -noout \u0026gt; public.pem p7 证书信任链","title":"Openssl"},{"content":"https://zh-hans.reactjs.org/docs/handling-events.html\nBabel 会把 JSX 转译成一个名为 React.createElement() 函数调用。\n组件名称必须以大写字母开头 React 会将以小写字母开头的组件视为原生 DOM 标签。例如，\u0026lt;div /\u0026gt; 代表 HTML 的 div 标签，而 \u0026lt;Welcome /\u0026gt; 则代表一个组件\nProps 的只读性 // Wrong this.setState({ counter: this.state.counter + this.props.increment, }); // Correct this.setState(function(state, props) { return { counter: state.counter + props.increment }; }); 事件 \u0026lt;button onClick={(e) =\u0026gt; this.deleteRow(id, e)}\u0026gt;Delete Row\u0026lt;/button\u0026gt; \u0026lt;button onClick={this.deleteRow.bind(this, id)}\u0026gt;Delete Row\u0026lt;/button\u0026gt; 条件渲染 与运算符 \u0026amp;\u0026amp; 三目运算符 The user is \u0026lt;b\u0026gt;{isLoggedIn ? \u0026#39;currently\u0026#39; : \u0026#39;not\u0026#39;}\u0026lt;/b\u0026gt; logged in. {isLoggedIn ? \u0026lt;LogoutButton onClick={this.handleLogoutClick} /\u0026gt; : \u0026lt;LoginButton onClick={this.handleLoginClick} /\u0026gt; } 阻止组件渲染 render直接 return null\n列表 \u0026amp; Key ","permalink":"https://xiaoqiaotq.github.io/posts/%E5%89%8D%E7%AB%AF/react/","summary":"https://zh-hans.reactjs.org/docs/handling-events.html\nBabel 会把 JSX 转译成一个名为 React.createElement() 函数调用。\n组件名称必须以大写字母开头 React 会将以小写字母开头的组件视为原生 DOM 标签。例如，\u0026lt;div /\u0026gt; 代表 HTML 的 div 标签，而 \u0026lt;Welcome /\u0026gt; 则代表一个组件\nProps 的只读性 // Wrong this.setState({ counter: this.state.counter + this.props.increment, }); // Correct this.setState(function(state, props) { return { counter: state.counter + props.increment }; }); 事件 \u0026lt;button onClick={(e) =\u0026gt; this.deleteRow(id, e)}\u0026gt;Delete Row\u0026lt;/button\u0026gt; \u0026lt;button onClick={this.deleteRow.bind(this, id)}\u0026gt;Delete Row\u0026lt;/button\u0026gt; 条件渲染 与运算符 \u0026amp;\u0026amp; 三目运算符 The user is \u0026lt;b\u0026gt;{isLoggedIn ? \u0026#39;currently\u0026#39; : \u0026#39;not\u0026#39;}\u0026lt;/b\u0026gt; logged in. {isLoggedIn ?","title":"React"},{"content":"技术选项 直接用Hugo 不要问我为什么\n安装 // 安装hugo brew install hugo // 检查是否安装成功，查看版本 hugo env 目录 启动 hugo new site xiaoqiaotq-blog cd xiaoqiaotq-blog git init # 官方sample theme git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke echo \u0026#34;theme = \u0026#39;ananke\u0026#39;\u0026#34; \u0026gt;\u0026gt; config.toml # 本地测试预览 hugo server -D 添加gitignore\n# Generated files by hugo /public/ /resources/_gen/ /assets/jsconfig.json hugo_stats.json # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # Temporary lock file while building /.hugo_build.lock .idea 主题 暂时找个个简单的,有时间在找 PaperMod https://adityatelange.github.io/hugo-PaperMod/\n部署到github page https://github.com/peaceiris/actions-hugo\ngithub 新建repository, xiaoqiaotq.github.io 关联远程remote ·git remote add origin master https://github.com/xiaoqiaotq/xiaoqiaotq.github.io.git 添加Action name: github pages on: push: branches: - main # Set a branch that will trigger a deployment pull_request: jobs: deploy: runs-on: ubuntu-22.04 steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public 贴下配置 config.yml baseURL: \u0026#34;https://xiaoqiaotq.github.io\u0026#34; languageCode: \u0026#34;zh-cn\u0026#34; title: \u0026#34;xiaoqiaotq\u0026#34; theme: \u0026#34;PaperMod\u0026#34; menu: main: - identifier: 分类 name: 分类 url: /categories/ weight: 10 - identifier: 标签 name: 标签 url: /tags/ weight: 20 # - identifier: example # name: example.org # url: https://example.org # weight: 30 # - identifier: home # name: 主页 # url: /posts/hom 访问 https://xiaoqiaotq.github.io\n参考 https://gohugo.io/getting-started/quick-start/\n","permalink":"https://xiaoqiaotq.github.io/posts/misc/blog%E5%8D%9A%E5%AE%A2%E6%90%9E%E8%B5%B7/","summary":"技术选项 直接用Hugo 不要问我为什么\n安装 // 安装hugo brew install hugo // 检查是否安装成功，查看版本 hugo env 目录 启动 hugo new site xiaoqiaotq-blog cd xiaoqiaotq-blog git init # 官方sample theme git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke echo \u0026#34;theme = \u0026#39;ananke\u0026#39;\u0026#34; \u0026gt;\u0026gt; config.toml # 本地测试预览 hugo server -D 添加gitignore\n# Generated files by hugo /public/ /resources/_gen/ /assets/jsconfig.json hugo_stats.json # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # Temporary lock file while building /.hugo_build.lock .idea 主题 暂时找个个简单的,有时间在找 PaperMod https://adityatelange.","title":"博客建站"}]